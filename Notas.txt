WebPack: Soporte CSS. Comentarios sobre modulos instalados (package.json)
    Parece que el plugin "optimize-css-assets-webpack-plugin" en WebPack 5.0++,
    ahora es "css-minimizer-webpack-plugin" 
    Instalado el nuevo y desinstalado el obsoleto con el cmd 
    > npm uninstall --save-dev optimize-css-assets-webpack-plugin
    He tenido que sustituir la constante siguiente en <webpack.config.js>
    const OptimizeCSSAssetsPlugin = require("css-minimizer-webpack-plugin");
    // const OptimizeCSSAssetsPlugin = require("optimize-css-assets-webpack-plugin");


webPack: Para la instalacion de SCSS y SASS
    He instalado/desinstalado. (solo queda el mini-css......)
        >> npm install   --save-dev mini-css-extract-plugin
        >> npm uninstall --save-dev css-minimizer-webpack-plugin
        >> npm uninstall --save-dev optimize-css-assets-webpack-plugin
        >> npm uninstall --save-dev node-sass

    Tambien desinstalo sass, pero al compilar lo pide, asi que reinstalo. Ahora pasa bien

    Curioso: Al correr >> npx webpack --watch 
    detecta cuando guardo fich: js/sass/css pero no veo que regenere el fich.Output 
    COMPROBAR que al navegar si reconoce los cambios introducidos
    
    Siempre que se compila de nuevo, general el fichero main.css en el raiz del tema. es
    posible que el watch actualice este fichero y el main-min.js lo referencie (¿¿¿???)
 

webPack: Para la instalacion de BABEL
    He ajustado todo a la version 7 de Babel (antes tenia un batiburrillo)
    El @babel/core ya estaba instalado. Luego, he instalado/desinstalado:
        npm install   --save-dev @babel/preset-env
        npm install   --save-dev @babel/cli
        npm uninstall --save-dev babel-core
        npm uninstall --save-dev babel-preset-env

    El @babel/cli es para probar la conversion: npx babel ./src/eventhorizon.js -o ./src/out.babel
    Si todo va a ser automatico, no sería necesario

uso './pr_Juan_src/js/entryPoint.js' como punto de entrada (internamente llama a todo lo que quiero empaquetar)

npm i --save lit
npm i --save-dev copy-webpack-plugin   // Creo que no es necesario
npm install --save-dev style-loader

npm i webpack-bundle-analyzer --save-dev        // no me acaba de gustar. Se queda bloqueado hasta ctl+c
DESINSTALADO npm i --save-dev eslint-reporting-webpack-plugin

npm install css-minimizer-webpack-plugin --save-dev  // reduce tamaño 
npm i compression-webpack-plugin --save-dev   //comprime los packs
npm install --save-dev html-webpack-plugin  //inyecta los packs en un html
npm install --save-dev typescript ts-loader
QUITADA npm install webpack-stats-diff-plugin --save-dev
npm i clean-webpack-plugin
npm install --save-dev @babel/plugin-proposal-class-properties
npm install -D webpack-dev-server'

Ejecucion con un fichconfig no_defecto
npx webpack --config=webpack.config_version_final_BABEL.js

metodo de trabajo en: ./src/@components/webpack.config.@libComponents.js


pte:
pruebas debuger + mapas
opcion webpack: devServer
que hace slint

pagina para hacer un plugin de WordPress
https://productdesigner.es/curso/como-crear-una-web-app-con-wordpress-y-react-usando-frontity/anexo-2-creando-un-plugin-de-wordpress-para-nuestra-funcionalidad/